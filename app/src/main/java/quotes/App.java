/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) throws FileNotFoundException {
//        System.out.println(new App().getGreeting());

        Random randomNumber = new Random();
        int randomNum = randomNumber.nextInt(1);
        System.out.println(getQuote(randomNum, "recentquotes.json"));
        String url = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        getQuoteFroAPI(url);

    }

    public static String getQuoteFroAPI(String url) {
        String urlOfApi = "";

        try {
            List<QuoteApi> quoteApiList = new ArrayList<QuoteApi>();
            Gson gson = new Gson();
            URL newUrl = new URL(url);
            HttpURLConnection connection = (HttpURLConnection) newUrl.openConnection();
            connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");
            int status = connection.getResponseCode();
            if (status == 200) {
                InputStream inputStream = connection.getInputStream();
                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                String line = bufferedReader.readLine();
                StringBuilder stringBuilder = new StringBuilder();
                while (line != null) {
                    stringBuilder.append(line + "\n");
                    line = bufferedReader.readLine();
                }
                QuoteApi quotes = gson.fromJson(stringBuilder.toString(),QuoteApi.class);
                quoteApiList.add(quotes);
                Writer writer = new FileWriter("dataFromAPI.json");
                new Gson().toJson(quoteApiList, writer);
                System.out.println("\nFrom API : \n" + quotes.toString());
                writer.close();
                bufferedReader.close();
            } else {
                System.out.println("An error occurred with status " + status);
            }
            connection.disconnect();

        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return urlOfApi;
    }


    public static String getQuote(int randomNum, String filePath) throws FileNotFoundException {
        Gson gson = new Gson();
        Scanner readFile = new Scanner(new File(filePath));
        StringBuilder quotes = new StringBuilder();
        while (readFile.hasNextLine()) {
            quotes.append(readFile.nextLine());
        }
        Quote[] allQuotes = gson.fromJson(quotes.toString(), Quote[].class);
        return allQuotes[randomNum].toString();
    }
}
